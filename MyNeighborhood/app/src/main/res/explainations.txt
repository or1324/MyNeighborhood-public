זרימת האפליקציה: 

שלב 1:
משתמש פותח את האפליקציה של עמית. 

שלב 2:
האפליקציה בודקת אם הוא מחובר או לא. אם הוא כן, היא מכניסה אותו למסך ההודעות, שדרך שם יש לו גישה לכל שאר המסכים. אם הוא לא, היא מכניסה אותו למסך ההרשמה. שם יש לו אופציה לעבור למסך התחברות, או להישאר בהרשמה, ששם הוא צריך לכתוב את מספר הטלפון שלו ואת השם שלו, ואם הוא מצטרף לשכונה שקיימת, הוא צריך לכתוב את קוד השכונה. אחרת הוא צריך לסמן שהוא יוצר חדשה - ובמקרה הזה הוא יקבל את הקוד שלה. בהתחברות הוא רק צריך לכתוב מספר טלפון, לאמת אותו לפי הקוד שנשלח אליו ב- sms, ואז האפליקציה בודקת אם המספר קיים באחת השכונות, ואם כן, נותנת לו גישה למשתמש. אם הוא יצר את השכונה, הוא מוכתר כאדמין של השכונה. 

שלב 3:
אחרי שהוא נרשם, הוא מועבר למסך ההודעות, שבו יש לו גישה גם לשאר המסכים. הוא יכול לכתוב הודעה, לקבל הודעות, ליצור אירוע לשכונה ועוד.

מבנה הענן: 

בענן יש קולקציה של שכונות, ובה כל השכונות. הזיהוי של השכונות מתבצע לפי מספר. השכונה הראשונה שנוצרה היא מספר 1, והמספר גדל בכל שכונה חדשה, לפי המספר של השכונה האחרונה + 1 (למשל, השכונה העשירית תהיה 10). בתוך כל שכונה, ישנן מספר קולקציות. יש קולקציית אזרחים (האנשים בשכונה) עם מסמכים שכל מסמך מייצג איש, והמזהה שלו הוא מספר הטלפון של האיש. בכל שכונה יש אזרח אחד שמוכתר כאדמין. יש קולקציית אירועים עם מסמכים של אירועים שמסודרים לפי תאריך יצירה, ויש להם מאפיינים כמו תאריך האירוע, שם האירוע, תיאור וכו'. יש גם קולקציית אנשי מקצוע, שמכילה מסמכים שהם מספרי הטלפון של אנשי המקצוע, ובתוך כל מסמך יש קולקציית תגובות על איש המקצוע. יש קולקציית מציאות ואבידות, שמכילה מסמכים שמסודרים לפי תאריך יצירת המסמך, ויש להם מאפיינים כמו האם זו אבידה או מציאה, תיאור החפץ, קישור לתמונת החפץ ועוד. יש קולקציית הודעות, שהמסמכים בה מסודרים לפי תאריך שליחה ההודעה, והיא מכילה בכל פעם מקסימום 100 הודעות. אחרי 100, ההודעות האחרונות נמחקות. לכל מסמך יש מאפיינים של מספר הטלפון של מי ששלח אותה, השם שלו, התוכן ועוד. לבסוף, יש קולקציה של שוק, שמכילה מסמכים שמזוהים לפי תאריך פרסום הפריט, ומכילים שדות כמו מחר הפריט, תיאור הפריט, שם הפריט, קישור לתמונת הפריט ועוד. הענן שדיברתי עליו עד עכשיו הוא Firebase Firestore, אשר בחרנו שיהיה ב West-Europe. מעבר אליו, יש גם את הענן Firebase Storage, אשר שומר את התמונות של האבידות/מציאות, ושל הפריטים בשוק.

מבנה הקוד: 

מפני שהפרוייקט ענקי, אחד האתגרים העיקריים בו היה ליצור מבנה קוד כמה שיותר ממוחזר, מסודר, גנרי ומובן. זה הכרחי בכדי למנוע באגים, ולמנוע חוסר התמצאות בקוד.
בקוד נעשה שימוש נרחב בשיטת ההורשה של שפות תכנות מונחות עצמים.
חלקי הקוד מסודרים בתיקיות, תיקיה לכל סוג מחלקה. ישנה תיקיה של מסכים, אשר בתוכה גם תיקיה של מסכי הרשמה, תיקיה של מחלקות שאחראיות על גרפיקה של Views, מחלקות שאחראיות על הפיכת התקשורת עם הענן לכמה שיותר גנרית ומחזורית, מחלקות שאחראיות על פעולות כלליות באפליקציה, ועוד.
הייתה חשיבה רבה על חוויית המשתמש ביצירת האפליקציה, ולכן ישנו שימוש נרחב בSpinners (אייקוני טעינה), אפשרויות לחזור אחרה, תקשורת עם המשתמש על ידי דיאלוגים וטוסטים, ועוד.
ישנה מחלקה אשר נועדה למחזר שמות של מקומות בענן, בכדי שלא אתבלבל בשמות השדות בענן. נעשה שימוש רב וחוזר במשתני המחלקה, במקום ליצור מחרוזות חדשות בכל פעם.
ישנה מחלקת אחסון בעלת שיטות סטטיות, בכדי למנוע את יצירת השיטות מחדש בכל מחלקה. 

בכדי למנוע ממשתמשים להיכנס לשכונות אשר אינן שייכות להם, ישנו מנגנון הצפנה, אשר מרכיביו שוכנים בענן, ומורדים למשתמש בכל פעם. בחרתי לשים את המנגנונים בענן בכדי למנוע מהאקרים לגלות את המנגנון על ידי עשיית דיקומפייל לאפליקציה.
למשתמש אין גישה למספר השכונה, והמספר לא שמור בשום מקום מלבד הענן.
אצל המשתמש שמור רק הקוד המוצפן, אשר מורכב ממספר אותיות רב מאוד, והסיכוי שמשתמש יכניס חרבוש רנדומלי ויצליח בעזרתו להיכנס לשכונה אחרת - אפסי.

//TODO keep writing